<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>
  <log4net>
    <logger name="CacheLog">
      <level value="INFO"/>
      <appender-ref ref="CacheAppender" />
    </logger>
    <logger name="TaskLog">
      <level value="DEBUG"/>
      <appender-ref ref="TaskAppender" />
    </logger>
	<logger name="CommonLog">
      <level value="DEBUG"/>
      <appender-ref ref="CommonAppender" />
    </logger>
    <root>
      <level value="DEBUG" />
    </root>
    <appender name="CacheAppender" type="log4net.Appender.RollingFileAppender" >
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="[%date][T%thread][%-5level]%message%newline" />
      </layout>
      <param name="File" value="Log/" />
      <!--是否追加到文件-->
      <param name="AppendToFile" value="true" />
      <!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <!--使用Unicode编码-->
      <Encoding value="UTF-8" />
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
      <param name="MaxSizeRollBackups" value="10" />
      <!--是否只写到一个文件中-->
      <param name="StaticLogFileName" value="false" />
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <param name="RollingStyle" value="Composite" />
      <!--按日期产生文件夹和文件名［在日期方式与混合方式下使用］-->
      <!--此处按日期产生文件夹，文件名固定。注意的'&quot'位置-->
      <!--<param name="DatePattern" value="yyyy-MM-dd/&quot;ReflectionLayout.log&quot;"  />-->
      <!--这是按日期产生文件夹，并在文件名前也加上日期-->
      <param name="DatePattern" value="yyyyMMdd&quot;-Cache.log&quot;"  />
      <!--这是先按日期产生文件夹，再形成下一级固定的文件夹-->
      <!--<param name="DatePattern" value="yyyyMMdd/&quot;TimerServer/TimerServer.log&quot;"  />-->
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。
      超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。
      可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志-->
      <param name="maximumFileSize" value="50MB" />
      <!--计数类型为1，2，3…-->
      <param name="CountDirection" value="1"/>
      <!--过滤设置，LevelRangeFilter为使用的过滤器。--><!--
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="DEBUG" />
        <param name="LevelMax" value="WARN" />
      </filter>-->
    </appender>
    <appender name="TaskAppender" type="log4net.Appender.RollingFileAppender" >
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%ndc] - %message%newline" />
      </layout>
      <param name="File" value="Log/" />
      <!--是否追加到文件-->
      <param name="AppendToFile" value="true" />
      <!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <!--使用Unicode编码-->
      <Encoding value="UTF-8" />
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
      <param name="MaxSizeRollBackups" value="10" />
      <!--是否只写到一个文件中-->
      <param name="StaticLogFileName" value="false" />
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <param name="RollingStyle" value="Composite" />
      <!--按日期产生文件夹和文件名［在日期方式与混合方式下使用］-->
      <!--此处按日期产生文件夹，文件名固定。注意的'&quot'位置-->
      <!--<param name="DatePattern" value="yyyy-MM-dd/&quot;ReflectionLayout.log&quot;"  />-->
      <!--这是按日期产生文件夹，并在文件名前也加上日期-->
      <param name="DatePattern" value="yyyyMMdd&quot;-Task.log&quot;"  />
      <!--这是先按日期产生文件夹，再形成下一级固定的文件夹-->
      <!--<param name="DatePattern" value="yyyyMMdd/&quot;TimerServer/TimerServer.log&quot;"  />-->
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。
      超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。
      可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志-->
      <param name="maximumFileSize" value="30MB" />
      <!--计数类型为1，2，3…-->
      <param name="CountDirection" value="1"/>
      <!--过滤设置，LevelRangeFilter为使用的过滤器。-->
      <!--
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="DEBUG" />
        <param name="LevelMax" value="WARN" />
      </filter>-->
    </appender>
	<appender name="CommonAppender" type="log4net.Appender.RollingFileAppender" >
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%ndc] - %message%newline" />
      </layout>
      <param name="File" value="Log/" />
      <!--是否追加到文件-->
      <param name="AppendToFile" value="true" />
      <!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <!--使用Unicode编码-->
      <Encoding value="UTF-8" />
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
      <param name="MaxSizeRollBackups" value="10" />
      <!--是否只写到一个文件中-->
      <param name="StaticLogFileName" value="false" />
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <param name="RollingStyle" value="Composite" />
      <!--按日期产生文件夹和文件名［在日期方式与混合方式下使用］-->
      <!--此处按日期产生文件夹，文件名固定。注意的'&quot'位置-->
      <!--<param name="DatePattern" value="yyyy-MM-dd/&quot;ReflectionLayout.log&quot;"  />-->
      <!--这是按日期产生文件夹，并在文件名前也加上日期-->
      <param name="DatePattern" value="yyyyMMdd&quot;-Common.log&quot;"  />
      <!--这是先按日期产生文件夹，再形成下一级固定的文件夹-->
      <!--<param name="DatePattern" value="yyyyMMdd/&quot;TimerServer/TimerServer.log&quot;"  />-->
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。
      超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。
      可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志-->
      <param name="maximumFileSize" value="30MB" />
      <!--计数类型为1，2，3…-->
      <param name="CountDirection" value="1"/>
      <!--过滤设置，LevelRangeFilter为使用的过滤器。-->
      <!--
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="DEBUG" />
        <param name="LevelMax" value="WARN" />
      </filter>-->
    </appender>
  </log4net>
</configuration>